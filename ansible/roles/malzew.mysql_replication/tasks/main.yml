---
- name: Ensure replication user exists on master
  mysql_user:
    name: "{{ mysql_replication_user.name }}"
    host: "{{ mysql_replication_user.host }}"
    password: "{{ mysql_replication_user.password }}"
    priv: "{{ mysql_replication_user.priv }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    state: present
  when:
    - mysql_replication_role == 'master'
    - mysql_replication_user is defined

- name: Check slave replication status
  mysql_replication:
    mode: getreplica
    login_unix_socket: /var/run/mysqld/mysqld.sock
  register: slave
  when:
    - mysql_replication_role == 'slave'
    - mysql_replication_master is defined

- name: Check master replication status
  mysql_replication:
    mode: getprimary
    login_unix_socket: /var/run/mysqld/mysqld.sock
  delegate_to: "{{ mysql_replication_master_ext }}"
  register: master
  when:
    - mysql_replication_role == 'slave'
    - mysql_replication_master is defined

- name: Configure replication on the slave
  mysql_replication:
    mode: changeprimary
    primary_host: "{{ mysql_replication_master }}"
    primary_user: "{{ mysql_replication_user.name }}"
    primary_password: "{{ mysql_replication_user.password }}"
    primary_log_file: "{{ master.File }}"
    primary_log_pos: "{{ master.Position }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when:
    - mysql_replication_role == 'slave'
    - mysql_replication_user is defined
    - mysql_replication_master is defined

- name: Start replication
  mysql_replication:
    mode: startreplica
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when:
    - mysql_replication_role == 'slave'
    - mysql_replication_master is defined
