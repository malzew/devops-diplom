#
# Creating inventory file for Ansible
#
resource "local_file" "inventory" {
  content = <<-DOC
    # Ansible inventory containing variable values from Terraform.
    # Generated by Terraform.

    [nodes:children]
    nginx

    [nodesinside:children]
    mysql
    app

    [mysql:children]
    mysql_master
    mysql_slave

    [nginx]
    ${yandex_compute_instance.nginx.hostname} ansible_host=${yandex_compute_instance.nginx.network_interface.0.nat_ip_address}

    [mysql_master]
    ${yandex_compute_instance.db01.hostname} ansible_host=${yandex_compute_instance.db01.network_interface.0.ip_address}

    [mysql_slave]
    ${yandex_compute_instance.db02.hostname} ansible_host=${yandex_compute_instance.db02.network_interface.0.ip_address}

    [app]
    ${yandex_compute_instance.app.hostname} ansible_host=${yandex_compute_instance.app.network_interface.0.ip_address}

    [nodesinside:vars]
    ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ProxyCommand="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -W %h:%p -q ${var.username}@${yandex_compute_instance.nginx.network_interface.0.nat_ip_address}"'

    DOC
  filename = "../ansible/inventory"
  file_permission = "0644"

  depends_on = [
    yandex_compute_instance.nginx,
    yandex_compute_instance.db01,
    yandex_compute_instance.db02,
    yandex_compute_instance.app
  ]
}

resource "null_resource" "clear_local_ssh_keys" {
  provisioner "local-exec" {
    command = "ssh-keygen -R ${yandex_compute_instance.nginx.network_interface.0.nat_ip_address}"
  }

  depends_on = [
    local_file.inventory
  ]
}

#
# Delay waiting for VM up
#
resource "null_resource" "wait" {
  provisioner "local-exec" {
    command = "sleep 100"
  }

  depends_on = [
    local_file.inventory
  ]
}
